==En discusion==

= Introduccion =

La idea de esto seria expresar mas o menos en la forma en que va a ser encarada la estructura a ser programada.


=Alternativa 1:=
Supongo que requeriremos una clase llamada Gridfile en la que tendremos una matriz de 2x2x2(de puntero a list) un list seria un espercie de balde el cual sera redimencionado cada vez que exista un overfloat.
Supongo que tambien existira una clase llamada Rango e la cual definire por ejemplo:
para la posicion 0 de valor 54
para la posicion 1 los de valor del 55 a la 60 
y esto me sera util para la obetencion de datos dentro de la matriz en el griedfile por ejemplo:
cuando quiero agregar un elemnto le paso el RegMedicamento y lo inserto en la posicion de la matriz que el la clase Rango diga.

=list o vector?=
Talves en vez de usa un list podemos usar un vector debido a que es mas facil obtener su temaño y recorrerlo.

=Alternativa 2:=

=== Clase s===

3 clases.
 * Gridfile: para un grid file de 3 atributos, la clase podria tener otro nombre... "Gridfile3".
 * Balde: Eso, contiene punteros al archivo
 * Zona: para delimitar las distintas zonas de la enroscada matriz. Supongo que es lo mismo que Rango en la alternativa 1.

=== Estructuras ===

El GridFile no es mas que una matriz de 3 dimensiones, con punteros a Balde. Su tamaño no varía, se crea con cierto tamaño y asi se mantiene durante toda la ejecución.

Los Baldes son, internamente, simples arreglos de enteros. Nada de templates para no complicarnos. Los Baldes tienen ints que se corresponden con un numero de registro (o posición) del archivo. Se pueden usan arrays comunes o vectores de STL, pero no listas ya que la capacidad de los Baldes es fija.

La estruc

La clase Rango tiene la mayor funcionalidad. Ya que marca COMO esta dividida el grid.

=== Ejemplo ===

Tenemos un GridFile. Como dijimos, se trata de una matriz de tamaño estático, supongamos de 128 x 128 x 128.

Inicialmente hay pocos elementos, asi que, gracias a las Zonas, "desde afuera" sólo se ve una matriz de... digamos 2 x 2 x 2. Es decir que tengo punteros a 8 Baldes. (Un balde por cada Zona). De esta forma no se tiene redundancia respecto a la información que hay en los baldes...
Al GridFile se accede através de las Zonas.

INTERNAMENTE, todos las celdas de la matriz que pertencen a una Zona, apuntan a un mismo balde (y todas las celdas pertenecen a una y solo una Zona) Es por esto que se accede a través de las Zonas, ya que esta clase es la unica que reconoce como esta distribuída la información dentro del Gridfile.

Inserción de elementos:
Algo como:
{{{
miGridfile.add(5,valorAtributo1,valorAtributo2,valorAtributo3);
}}}
La clase Gridfile necesita averiguar donde debe ser ubicado este valor. Es decir, en qué Zona. Luego si no hay lugar en la Zona, esta deberá encargarse de dividirse para dar espacio al nuevo valor.
Faltan definir un par de cosas aqui.

=== A definir ===
*¿Como se almacenan las Zonas de un GridFile?*
*¿Que estructura de datos se utilizaría para las Zonas?*